<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<archive xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UC1 UC2 QN.jsimg" timestamp="Wed Jan 17 12:22:56 CET 2018" xsi:noNamespaceSchemaLocation="Archive.xsd">
<sim disableStatisticStop="false" logDecimalSeparator="," logDelimiter=";" logPath="/home/gaetano/JMT/" logReplaceMode="0" maxSamples="1000000" name="UC1 UC2 QN.jsimg" polling="1.0" xsi:noNamespaceSchemaLocation="SIMmodeldefinition.xsd">
<userClass customers="1000" name="StartUp Sampling Water Inland" priority="2" referenceSource="Control Center Server" type="closed"/>
<userClass name="Check Water Quality" priority="1" referenceSource="Quality Control Supervisor - User" type="open"/>
<userClass customers="1000" name="StartUp Sampling Water Outgoing" priority="2" referenceSource="Control Center Server" type="closed"/>
<node name="Lan Wired">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Delay">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Control Center Server</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Control Center Server">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Inland Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Outgoing Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Internet</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Inland Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Outgoing Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Internet</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Inland Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Outgoing Control Unit</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Internet</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
</node>
<node name="Seaweed Picking Inland Control Unit">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Seaweed Picking Outgoing Control Unit">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Lan Wireless">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Delay">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Seaweed Picking Inlands">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Delay">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Seaweed Picking Outgoings">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Delay">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Water Company Server">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Internet">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Delay">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Water Company Server</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Purification System</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Water Company Server</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.5</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Purification System</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.5</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Water Company Server</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Purification System</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
</node>
<node name="Purification System">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Inland Outgoing Router">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="ServiceTunnel"/>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Inlands</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Outgoings</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.EmpiricalStrategy" name="Probabilities">
<subParameter array="true" classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntryArray">
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Inlands</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>0.0</value>
</subParameter>
</subParameter>
<subParameter classPath="jmt.engine.random.EmpiricalEntry" name="EmpiricalEntry">
<subParameter classPath="java.lang.String" name="stationName">
<value>Seaweed Picking Outgoings</value>
</subParameter>
<subParameter classPath="java.lang.Double" name="probability">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
</node>
<node name="Water Company Disk">
<section className="Queue">
<parameter classPath="java.lang.Integer" name="size">
<value>-1</value>
</parameter>
<parameter array="true" classPath="java.lang.String" name="dropStrategies">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.String" name="dropStrategy">
<value>drop</value>
</subParameter>
</parameter>
<parameter classPath="jmt.engine.NetStrategies.QueueGetStrategies.FCFSstrategy" name="FCFSstrategy"/>
<parameter array="true" classPath="jmt.engine.NetStrategies.QueuePutStrategy" name="QueuePutStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.QueuePutStrategies.TailStrategy" name="TailStrategy"/>
</parameter>
</section>
<section className="Server">
<parameter classPath="java.lang.Integer" name="maxJobs">
<value>1</value>
</parameter>
<parameter array="true" classPath="java.lang.Integer" name="numberOfVisits">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="java.lang.Integer" name="numberOfVisits">
<value>1</value>
</subParameter>
</parameter>
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>1.0</value>
</subParameter>
</subParameter>
</subParameter>
</parameter>
</section>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<node name="Sink QCS">
<section className="JobSink"/>
</node>
<node name="Quality Control Supervisor - User">
<section className="RandomSource">
<parameter array="true" classPath="jmt.engine.NetStrategies.ServiceStrategy" name="ServiceStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<value>null</value>
</subParameter>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<subParameter classPath="jmt.engine.random.Exponential" name="Exponential"/>
<subParameter classPath="jmt.engine.random.ExponentialPar" name="distrPar">
<subParameter classPath="java.lang.Double" name="lambda">
<value>0.5</value>
</subParameter>
</subParameter>
</subParameter>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.ServiceStrategies.ServiceTimeStrategy" name="ServiceTimeStrategy">
<value>null</value>
</subParameter>
</parameter>
</section>
<section className="ServiceTunnel"/>
<section className="Router">
<parameter array="true" classPath="jmt.engine.NetStrategies.RoutingStrategy" name="RoutingStrategy">
<refClass>StartUp Sampling Water Inland</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
<refClass>Check Water Quality</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.ShortestResponseTimeRoutingStrategy" name="Shortest Response Time"/>
<refClass>StartUp Sampling Water Outgoing</refClass>
<subParameter classPath="jmt.engine.NetStrategies.RoutingStrategies.RandomStrategy" name="Random"/>
</parameter>
</section>
</node>
<measure alpha="0.01" name="Control Center Server_Queue Time" nodeType="station" precision="0.03" referenceNode="Control Center Server" referenceUserClass="" type="Queue Time" verbose="true"/>
<measure alpha="0.01" name="Control Center Server_Response Time" nodeType="station" precision="0.03" referenceNode="Control Center Server" referenceUserClass="" type="Response Time" verbose="false"/>
<measure alpha="0.01" name="Control Center Server_Number of Customers" nodeType="station" precision="0.03" referenceNode="Control Center Server" referenceUserClass="" type="Number of Customers" verbose="false"/>
<measure alpha="0.01" name="System Throughput" nodeType="" precision="0.03" referenceNode="" referenceUserClass="" type="System Throughput" verbose="false"/>
<measure alpha="0.01" name="System Response Time" nodeType="" precision="0.03" referenceNode="" referenceUserClass="" type="System Response Time" verbose="false"/>
<measure alpha="0.01" name="Control Center Server_Throughput" nodeType="station" precision="0.03" referenceNode="Control Center Server" referenceUserClass="" type="Throughput" verbose="false"/>
<measure alpha="0.01" name="Control Center Server_Utilization" nodeType="station" precision="0.03" referenceNode="Control Center Server" referenceUserClass="" type="Utilization" verbose="false"/>
<measure alpha="0.01" name="Sink QCS_Response Time per Sink" nodeType="station" precision="0.03" referenceNode="Sink QCS" referenceUserClass="" type="Response Time per Sink" verbose="true"/>
<connection source="Lan Wired" target="Control Center Server"/>
<connection source="Control Center Server" target="Seaweed Picking Inland Control Unit"/>
<connection source="Control Center Server" target="Seaweed Picking Outgoing Control Unit"/>
<connection source="Control Center Server" target="Internet"/>
<connection source="Seaweed Picking Inland Control Unit" target="Lan Wireless"/>
<connection source="Seaweed Picking Outgoing Control Unit" target="Lan Wireless"/>
<connection source="Lan Wireless" target="Inland Outgoing Router"/>
<connection source="Seaweed Picking Inlands" target="Internet"/>
<connection source="Seaweed Picking Outgoings" target="Internet"/>
<connection source="Water Company Server" target="Water Company Disk"/>
<connection source="Internet" target="Water Company Server"/>
<connection source="Internet" target="Purification System"/>
<connection source="Purification System" target="Sink QCS"/>
<connection source="Inland Outgoing Router" target="Seaweed Picking Inlands"/>
<connection source="Inland Outgoing Router" target="Seaweed Picking Outgoings"/>
<connection source="Water Company Disk" target="Control Center Server"/>
<connection source="Water Company Disk" target="Sink QCS"/>
<connection source="Quality Control Supervisor - User" target="Lan Wired"/>
<blockingRegion name="Physical Control Center Server" type="default">
<regionNode nodeName="Control Center Server"/>
<globalConstraint maxJobs="-1"/>
<globalMemoryConstraint maxMemory="-1"/>
<classConstraint jobClass="StartUp Sampling Water Inland" maxJobsPerClass="-1"/>
<classConstraint jobClass="Check Water Quality" maxJobsPerClass="-1"/>
<classConstraint jobClass="StartUp Sampling Water Outgoing" maxJobsPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Inland" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="Check Water Quality" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Outgoing" maxMemoryPerClass="-1"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Inland"/>
<dropRules dropThisClass="true" jobClass="Check Water Quality"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Outgoing"/>
<classWeight jobClass="StartUp Sampling Water Inland" weight="1"/>
<classWeight jobClass="Check Water Quality" weight="1"/>
<classWeight jobClass="StartUp Sampling Water Outgoing" weight="1"/>
<classSize jobClass="StartUp Sampling Water Inland" size="1"/>
<classSize jobClass="Check Water Quality" size="1"/>
<classSize jobClass="StartUp Sampling Water Outgoing" size="1"/>
</blockingRegion>
<blockingRegion name="Physical Seaweed Picking Inland Control Unit" type="default">
<regionNode nodeName="Seaweed Picking Inland Control Unit"/>
<globalConstraint maxJobs="-1"/>
<globalMemoryConstraint maxMemory="-1"/>
<classConstraint jobClass="StartUp Sampling Water Inland" maxJobsPerClass="-1"/>
<classConstraint jobClass="Check Water Quality" maxJobsPerClass="-1"/>
<classConstraint jobClass="StartUp Sampling Water Outgoing" maxJobsPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Inland" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="Check Water Quality" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Outgoing" maxMemoryPerClass="-1"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Inland"/>
<dropRules dropThisClass="true" jobClass="Check Water Quality"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Outgoing"/>
<classWeight jobClass="StartUp Sampling Water Inland" weight="1"/>
<classWeight jobClass="Check Water Quality" weight="1"/>
<classWeight jobClass="StartUp Sampling Water Outgoing" weight="1"/>
<classSize jobClass="StartUp Sampling Water Inland" size="1"/>
<classSize jobClass="Check Water Quality" size="1"/>
<classSize jobClass="StartUp Sampling Water Outgoing" size="1"/>
</blockingRegion>
<blockingRegion name="Physical Seaweed Picking Outgoing Control Unit" type="default">
<regionNode nodeName="Seaweed Picking Outgoing Control Unit"/>
<globalConstraint maxJobs="-1"/>
<globalMemoryConstraint maxMemory="-1"/>
<classConstraint jobClass="StartUp Sampling Water Inland" maxJobsPerClass="-1"/>
<classConstraint jobClass="Check Water Quality" maxJobsPerClass="-1"/>
<classConstraint jobClass="StartUp Sampling Water Outgoing" maxJobsPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Inland" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="Check Water Quality" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Outgoing" maxMemoryPerClass="-1"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Inland"/>
<dropRules dropThisClass="true" jobClass="Check Water Quality"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Outgoing"/>
<classWeight jobClass="StartUp Sampling Water Inland" weight="1"/>
<classWeight jobClass="Check Water Quality" weight="1"/>
<classWeight jobClass="StartUp Sampling Water Outgoing" weight="1"/>
<classSize jobClass="StartUp Sampling Water Inland" size="1"/>
<classSize jobClass="Check Water Quality" size="1"/>
<classSize jobClass="StartUp Sampling Water Outgoing" size="1"/>
</blockingRegion>
<blockingRegion name="Physical Water Company Server" type="default">
<regionNode nodeName="Water Company Server"/>
<globalConstraint maxJobs="-1"/>
<globalMemoryConstraint maxMemory="-1"/>
<classConstraint jobClass="StartUp Sampling Water Inland" maxJobsPerClass="-1"/>
<classConstraint jobClass="Check Water Quality" maxJobsPerClass="-1"/>
<classConstraint jobClass="StartUp Sampling Water Outgoing" maxJobsPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Inland" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="Check Water Quality" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Outgoing" maxMemoryPerClass="-1"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Inland"/>
<dropRules dropThisClass="true" jobClass="Check Water Quality"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Outgoing"/>
<classWeight jobClass="StartUp Sampling Water Inland" weight="1"/>
<classWeight jobClass="Check Water Quality" weight="1"/>
<classWeight jobClass="StartUp Sampling Water Outgoing" weight="1"/>
<classSize jobClass="StartUp Sampling Water Inland" size="1"/>
<classSize jobClass="Check Water Quality" size="1"/>
<classSize jobClass="StartUp Sampling Water Outgoing" size="1"/>
</blockingRegion>
<blockingRegion name="Physical Purification System" type="default">
<regionNode nodeName="Purification System"/>
<globalConstraint maxJobs="-1"/>
<globalMemoryConstraint maxMemory="-1"/>
<classConstraint jobClass="StartUp Sampling Water Inland" maxJobsPerClass="-1"/>
<classConstraint jobClass="Check Water Quality" maxJobsPerClass="-1"/>
<classConstraint jobClass="StartUp Sampling Water Outgoing" maxJobsPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Inland" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="Check Water Quality" maxMemoryPerClass="-1"/>
<classMemoryConstraint jobClass="StartUp Sampling Water Outgoing" maxMemoryPerClass="-1"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Inland"/>
<dropRules dropThisClass="true" jobClass="Check Water Quality"/>
<dropRules dropThisClass="true" jobClass="StartUp Sampling Water Outgoing"/>
<classWeight jobClass="StartUp Sampling Water Inland" weight="1"/>
<classWeight jobClass="Check Water Quality" weight="1"/>
<classWeight jobClass="StartUp Sampling Water Outgoing" weight="1"/>
<classSize jobClass="StartUp Sampling Water Inland" size="1"/>
<classSize jobClass="Check Water Quality" size="1"/>
<classSize jobClass="StartUp Sampling Water Outgoing" size="1"/>
</blockingRegion>
<preload>
<stationPopulations stationName="Lan Wired">
<classPopulation population="1000" refClass="StartUp Sampling Water Inland"/>
<classPopulation population="1000" refClass="StartUp Sampling Water Outgoing"/>
</stationPopulations>
</preload>
</sim>
<jmodel xsi:noNamespaceSchemaLocation="JModelGUI.xsd">
<userClass color="#FF0000FF" name="StartUp Sampling Water Inland"/>
<userClass color="#FFFF0000" name="Check Water Quality"/>
<userClass color="#FFFFC800" name="StartUp Sampling Water Outgoing"/>
<station name="Lan Wired">
<position rotate="false" x="321.0" y="148.0"/>
</station>
<station name="Control Center Server">
<position rotate="false" x="487.0" y="101.0"/>
</station>
<station name="Seaweed Picking Inland Control Unit">
<position rotate="false" x="439.0" y="392.0"/>
</station>
<station name="Seaweed Picking Outgoing Control Unit">
<position rotate="false" x="430.0" y="559.0"/>
</station>
<station name="Lan Wireless">
<position rotate="false" x="789.0" y="407.0"/>
</station>
<station name="Seaweed Picking Inlands">
<position rotate="false" x="1241.0" y="397.0"/>
</station>
<station name="Seaweed Picking Outgoings">
<position rotate="false" x="1232.0" y="541.0"/>
</station>
<station name="Water Company Server">
<position rotate="false" x="1063.0" y="94.0"/>
</station>
<station name="Internet">
<position rotate="false" x="765.0" y="89.0"/>
</station>
<station name="Purification System">
<position rotate="false" x="1082.0" y="272.0"/>
</station>
<station name="Inland Outgoing Router">
<position rotate="false" x="947.0" y="454.0"/>
</station>
<station name="Water Company Disk">
<position rotate="false" x="1358.0" y="135.0"/>
</station>
<station name="Sink QCS">
<position rotate="false" x="890.0" y="13.0"/>
</station>
<station name="Quality Control Supervisor - User">
<position rotate="false" x="72.0" y="174.0"/>
</station>
</jmodel>
<results elapsedTime="40755" logDecimalSeparator="," logDelimiter=";" pollingInterval="1.0" xsi:noNamespaceSchemaLocation="Results.xsd">
<measure alpha="0.99" analyzedSamples="19200" discardedSamples="96035" finalValue="6007.552390075713" logFile="/home/gaetano/JMT/Control Center Server_Queue Time.csv" name="Control Center Server_Queue Time" nodeType="station" precision="0.03" referenceClass="" referenceStation="Control Center Server" state="1" type="1">
<sample lastIntervalAvgValue="968.6651193462027" meanValue="968.6651193462027" simulationTime="1906.6718465235988"/>
<sample lastIntervalAvgValue="2673.2486767638507" meanValue="2175.7647322075336" simulationTime="6610.267687169012"/>
<sample lastIntervalAvgValue="3689.4065447948856" meanValue="2804.7756804099563" simulationTime="11191.973247319267"/>
<sample lastIntervalAvgValue="4212.986243634187" meanValue="3130.496046091051" simulationTime="14553.2937323863"/>
<sample lastIntervalAvgValue="4547.632771564439" meanValue="3466.5814576501275" simulationTime="19101.826164772407"/>
<sample lastIntervalAvgValue="4785.362323441974" meanValue="3642.001098499287" simulationTime="21969.535478117872"/>
<sample lastIntervalAvgValue="4862.1950706860625" meanValue="4048.248615992572" simulationTime="26454.657734175173"/>
<sample lastIntervalAvgValue="5120.3482025472495" meanValue="4435.006426971287" simulationTime="30065.25431823019"/>
<sample lastIntervalAvgValue="5318.40611982869" meanValue="4802.016082384621" simulationTime="35137.37154614376"/>
<sample lastIntervalAvgValue="5485.885750350551" meanValue="5044.266435745961" simulationTime="39685.37552625514"/>
<sample lastIntervalAvgValue="5554.278749858715" meanValue="5208.786041170725" simulationTime="43801.170121228126"/>
<sample lastIntervalAvgValue="5680.217828045391" meanValue="5320.112983358725" simulationTime="46930.72943762472"/>
<sample lastIntervalAvgValue="5756.009072061336" meanValue="5506.24364012749" simulationTime="52263.67936589907"/>
<sample lastIntervalAvgValue="5775.866284258591" meanValue="5587.065030867362" simulationTime="55558.54534011549"/>
<sample lastIntervalAvgValue="5798.41324580449" meanValue="5678.983524653992" simulationTime="60356.8873467079"/>
<sample lastIntervalAvgValue="5728.733450988495" meanValue="5715.8376274535585" simulationTime="63966.232163225046"/>
<sample lastIntervalAvgValue="5736.910174323244" meanValue="5741.375530937992" simulationTime="67299.09129630038"/>
<sample lastIntervalAvgValue="5756.766176777411" meanValue="5761.051650729196" simulationTime="72558.6113665767"/>
<sample lastIntervalAvgValue="5829.379882709138" meanValue="5771.368774471204" simulationTime="76095.19277787814"/>
<sample lastIntervalAvgValue="5796.903636436472" meanValue="5774.815330182227" simulationTime="79483.5409816295"/>
<sample lastIntervalAvgValue="5799.611690273861" meanValue="5774.544417041409" simulationTime="84562.2227135427"/>
<sample lastIntervalAvgValue="5796.7927792893615" meanValue="5782.207015090305" simulationTime="87750.86157481128"/>
<sample lastIntervalAvgValue="5903.192267336984" meanValue="5804.819807450187" simulationTime="90771.7669513809"/>
<sample lastIntervalAvgValue="5907.510929361202" meanValue="5832.7205299108855" simulationTime="94789.14873242767"/>
<sample lastIntervalAvgValue="5972.371951787004" meanValue="5860.727904810865" simulationTime="99103.3820187899"/>
<sample lastIntervalAvgValue="6090.872300263366" meanValue="5894.80732483308" simulationTime="102232.08088612667"/>
<sample lastIntervalAvgValue="6086.114656302174" meanValue="5931.394389012237" simulationTime="105467.29037708095"/>
<sample lastIntervalAvgValue="5970.511856973114" meanValue="5969.298554851966" simulationTime="110514.07033380627"/>
<sample lastIntervalAvgValue="5938.5260901477" meanValue="6009.332578053336" simulationTime="114020.14971227218"/>
<sample lastIntervalAvgValue="5978.784955800604" lowerBound="5926.97558286258" meanValue="6007.552390075713" simulationTime="115133.82002209505" upperBound="6088.129197288847"/>
</measure>
<measure alpha="0.99" analyzedSamples="25600" discardedSamples="133220" finalValue="5976.367421827145" name="Control Center Server_Response Time" nodeType="station" precision="0.03" referenceClass="" referenceStation="Control Center Server" state="1" type="2">
<sample lastIntervalAvgValue="969.1726278685157" meanValue="969.1726278685157" simulationTime="1906.6718465235988"/>
<sample lastIntervalAvgValue="2673.9503834480156" meanValue="2176.5936799235233" simulationTime="6610.267687169012"/>
<sample lastIntervalAvgValue="3690.247780691181" meanValue="2805.665736759652" simulationTime="11191.973247319267"/>
<sample lastIntervalAvgValue="4213.871237298832" meanValue="3131.407222649508" simulationTime="14553.2937323863"/>
<sample lastIntervalAvgValue="4548.5582557152875" meanValue="3467.5135731176783" simulationTime="19101.826164772407"/>
<sample lastIntervalAvgValue="4786.2966849318345" meanValue="3642.9414524343038" simulationTime="21969.535478117872"/>
<sample lastIntervalAvgValue="4863.158533288414" meanValue="4049.205139711357" simulationTime="26454.657734175173"/>
<sample lastIntervalAvgValue="5121.272217010467" meanValue="4435.967021907873" simulationTime="30065.25431823019"/>
<sample lastIntervalAvgValue="5319.374771604108" meanValue="4802.986822310592" simulationTime="35137.37154614376"/>
<sample lastIntervalAvgValue="5486.840833451264" meanValue="5045.238821058751" simulationTime="39685.37552625514"/>
<sample lastIntervalAvgValue="5555.282136151959" meanValue="5209.662850361837" simulationTime="43801.170121228126"/>
<sample lastIntervalAvgValue="5681.186083024976" meanValue="5321.096908667811" simulationTime="46930.72943762472"/>
<sample lastIntervalAvgValue="5757.00621150228" meanValue="5507.235652370387" simulationTime="52263.67936589907"/>
<sample lastIntervalAvgValue="5776.8539953796135" meanValue="5588.058472557561" simulationTime="55558.54534011549"/>
<sample lastIntervalAvgValue="5799.406439650184" meanValue="5679.979250470738" simulationTime="60356.8873467079"/>
<sample lastIntervalAvgValue="5729.735619006395" meanValue="5716.836133764392" simulationTime="63966.232163225046"/>
<sample lastIntervalAvgValue="5737.9140763957585" meanValue="5742.375939661864" simulationTime="67299.09129630038"/>
<sample lastIntervalAvgValue="5757.75139463825" meanValue="5762.043285900172" simulationTime="72558.6113665767"/>
<sample lastIntervalAvgValue="5830.394129734062" meanValue="5772.36446762832" simulationTime="76095.19277787814"/>
<sample lastIntervalAvgValue="5797.9132169819495" meanValue="5775.812563101773" simulationTime="79483.5409816295"/>
<sample lastIntervalAvgValue="5800.620647706115" meanValue="5775.547550824126" simulationTime="84562.2227135427"/>
<sample lastIntervalAvgValue="5797.752973206594" meanValue="5783.19781689884" simulationTime="87750.86157481128"/>
<sample lastIntervalAvgValue="5904.17192178521" meanValue="5805.817760934722" simulationTime="90771.7669513809"/>
<sample lastIntervalAvgValue="5908.506311526849" meanValue="5833.718755321756" simulationTime="94789.14873242767"/>
<sample lastIntervalAvgValue="5973.336805664172" meanValue="5861.717938723823" simulationTime="99103.3820187899"/>
<sample lastIntervalAvgValue="6091.873907745074" meanValue="5895.799020876424" simulationTime="102232.08088612667"/>
<sample lastIntervalAvgValue="6087.133291536972" meanValue="5932.389308201009" simulationTime="105467.29037708095"/>
<sample lastIntervalAvgValue="5971.525518353965" meanValue="5970.299241763427" simulationTime="110514.07033380627"/>
<sample lastIntervalAvgValue="5939.528413044865" meanValue="5981.855191973963" simulationTime="114020.14971227218"/>
<sample lastIntervalAvgValue="5981.703499220657" meanValue="5990.871523808987" simulationTime="117137.67914248374"/>
<sample lastIntervalAvgValue="5978.313130977277" meanValue="6001.108182123746" simulationTime="120449.57744042361"/>
<sample lastIntervalAvgValue="5957.341175904118" meanValue="5998.475224182955" simulationTime="123650.26807397573"/>
<sample lastIntervalAvgValue="5864.981989039606" meanValue="5951.352587641279" simulationTime="128840.81379517494"/>
<sample lastIntervalAvgValue="6015.200165559582" meanValue="5949.389159272117" simulationTime="131926.35728604812"/>
<sample lastIntervalAvgValue="6008.41861965104" meanValue="5954.944987561048" simulationTime="135180.165736014"/>
<sample lastIntervalAvgValue="6010.25288491196" meanValue="5963.376609280149" simulationTime="138323.06753677878"/>
<sample lastIntervalAvgValue="5951.155797308253" meanValue="5961.207934691005" simulationTime="143351.47428134017"/>
<sample lastIntervalAvgValue="5957.157300156193" meanValue="5957.398545190339" simulationTime="147172.2741255028"/>
<sample lastIntervalAvgValue="5898.400615643247" meanValue="5957.021917913638" simulationTime="150582.0146977613"/>
<sample lastIntervalAvgValue="5965.291218977338" meanValue="5970.0000977370755" simulationTime="154023.61760925665"/>
<sample lastIntervalAvgValue="6056.338421702671" lowerBound="5901.89361530278" meanValue="5976.367421827145" simulationTime="158795.05266019676" upperBound="6050.841228351511"/>
</measure>
<measure alpha="0.99" analyzedSamples="12800" discardedSamples="111580" finalValue="5805.350314219326" name="Control Center Server_Number of Customers" nodeType="station" precision="0.03" referenceClass="" referenceStation="Control Center Server" state="1" type="0">
<sample lastIntervalAvgValue="2401.09804104592" meanValue="2401.09804104592" simulationTime="1906.7393114705385"/>
<sample lastIntervalAvgValue="3491.652061186004" meanValue="3177.1372032595737" simulationTime="6611.459424183049"/>
<sample lastIntervalAvgValue="4270.076059759779" meanValue="3625.1767170110606" simulationTime="11192.8538857619"/>
<sample lastIntervalAvgValue="4604.800142561678" meanValue="4154.8775082408765" simulationTime="14555.870487002076"/>
<sample lastIntervalAvgValue="4885.246903608469" meanValue="4610.66375028886" simulationTime="19103.322986077415"/>
<sample lastIntervalAvgValue="5021.744035540622" meanValue="4791.584793241541" simulationTime="21969.535478117872"/>
<sample lastIntervalAvgValue="5157.085804328961" meanValue="5016.047106918108" simulationTime="26456.51748968626"/>
<sample lastIntervalAvgValue="5340.289815897155" meanValue="5162.086705335474" simulationTime="30066.25420774388"/>
<sample lastIntervalAvgValue="5525.001528918199" meanValue="5367.567787201196" simulationTime="35137.75927441955"/>
<sample lastIntervalAvgValue="5586.7761162255765" meanValue="5510.290228095768" simulationTime="39686.08931999189"/>
<sample lastIntervalAvgValue="5645.336636408907" meanValue="5597.658584112931" simulationTime="43803.13390648594"/>
<sample lastIntervalAvgValue="5725.115929599835" meanValue="5639.571286469942" simulationTime="46931.15051782899"/>
<sample lastIntervalAvgValue="5826.06906199526" meanValue="5743.245392452813" simulationTime="52263.8918891704"/>
<sample lastIntervalAvgValue="5829.637485579528" meanValue="5791.710248579612" simulationTime="55559.77615557754"/>
<sample lastIntervalAvgValue="5789.226486960594" lowerBound="5638.525657053693" meanValue="5805.350314219326" simulationTime="59157.950081258394" upperBound="5972.174971384959"/>
</measure>
<measure alpha="0.99" analyzedSamples="97280" discardedSamples="12105" finalValue="1.200880034887083" name="System Throughput" nodeType="" precision="0.03" referenceClass="" referenceStation="" state="1" type="9">
<sample lastIntervalAvgValue="3.99372895612409" meanValue="3.99372895612409" simulationTime="1906.7393114705385"/>
<sample lastIntervalAvgValue="1.558103729813091" meanValue="2.2607707670640553" simulationTime="6609.250357303759"/>
<sample lastIntervalAvgValue="1.39084778318866" meanValue="1.904563339753989" simulationTime="11192.066735230434"/>
<sample lastIntervalAvgValue="1.3358439199584182" meanValue="1.7178878613157953" simulationTime="14554.735032691282"/>
<sample lastIntervalAvgValue="1.2823759944353068" meanValue="1.4126741394204148" simulationTime="19103.322986077415"/>
<sample lastIntervalAvgValue="1.2786051073126545" meanValue="1.3500745309749926" simulationTime="21969.72792927604"/>
<sample lastIntervalAvgValue="1.257915024542399" lowerBound="1.2987978703807561" meanValue="1.3387305143368853" simulationTime="26456.51748968626" upperBound="1.3811965765173877"/>
<sample lastIntervalAvgValue="1.2158946794870822" lowerBound="1.2987978703807561" meanValue="1.3387305143368853" simulationTime="30066.205132905056" upperBound="1.3811965765173877"/>
<sample lastIntervalAvgValue="1.2160531832227213" lowerBound="1.2987978703807561" meanValue="1.3387305143368853" simulationTime="35136.70705261484" upperBound="1.3811965765173877"/>
<sample lastIntervalAvgValue="1.1995474722532447" lowerBound="1.2987978703807561" meanValue="1.3387305143368853" simulationTime="39685.922591162474" upperBound="1.3811965765173877"/>
<sample lastIntervalAvgValue="1.1849686823334873" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="43802.48708162145" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1797369948089116" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="46931.15051782899" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.181652438868787" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="52262.667462042366" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1729259781639811" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="55559.55070275048" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.200721717264751" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="60357.49840134261" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1949408065360039" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="63966.882210489515" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1824862624774286" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="67293.77075442733" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1781680204173313" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="72557.87561258086" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.174376592085213" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="76094.21994027728" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1798481839347181" lowerBound="1.2167647405894015" meanValue="1.2533335838975574" simulationTime="79483.63906593427" upperBound="1.292168627764412"/>
<sample lastIntervalAvgValue="1.1807738000509767" lowerBound="1.1669726995238137" meanValue="1.200880034887083" simulationTime="83996.78121032292" upperBound="1.2368167454793604"/>
</measure>
<measure alpha="0.99" analyzedSamples="25600" discardedSamples="60705" finalValue="4837.453241407781" name="System Response Time" nodeType="" precision="0.03" referenceClass="" referenceStation="" state="1" type="8">
<sample lastIntervalAvgValue="231.29331758914878" meanValue="231.29331758914878" simulationTime="1906.7393114705385"/>
<sample lastIntervalAvgValue="1585.966324504489" meanValue="895.574479526555" simulationTime="6609.250357303759"/>
<sample lastIntervalAvgValue="2506.0026129657804" meanValue="1377.1314753297847" simulationTime="11192.066735230434"/>
<sample lastIntervalAvgValue="3054.170470248968" meanValue="1722.762247770534" simulationTime="14554.735032691282"/>
<sample lastIntervalAvgValue="3410.134932920103" meanValue="2480.5067907487173" simulationTime="19103.322986077415"/>
<sample lastIntervalAvgValue="3702.0334966067912" meanValue="2856.646777005824" simulationTime="21969.72792927604"/>
<sample lastIntervalAvgValue="3841.254848812908" meanValue="3305.139006369085" simulationTime="26456.51748968626"/>
<sample lastIntervalAvgValue="4102.217224938857" meanValue="3585.4912131907154" simulationTime="30066.205132905056"/>
<sample lastIntervalAvgValue="4256.398912092719" meanValue="3884.231055562059" simulationTime="35136.70705261484"/>
<sample lastIntervalAvgValue="4510.862567401186" meanValue="4118.812355447315" simulationTime="39685.922591162474"/>
<sample lastIntervalAvgValue="4598.694641966726" meanValue="4293.77622991339" simulationTime="43802.48708162145"/>
<sample lastIntervalAvgValue="4659.982026643209" meanValue="4399.874848134439" simulationTime="46931.15051782899"/>
<sample lastIntervalAvgValue="4809.591118165396" meanValue="4582.54124541808" simulationTime="52262.667462042366"/>
<sample lastIntervalAvgValue="4950.84287648083" meanValue="4685.511525149953" simulationTime="55559.55070275048"/>
<sample lastIntervalAvgValue="4888.614130718681" meanValue="4782.783111643786" simulationTime="60357.49840134261"/>
<sample lastIntervalAvgValue="4917.0458348452175" meanValue="4834.892627007515" simulationTime="63966.882210489515"/>
<sample lastIntervalAvgValue="4866.922503786202" lowerBound="4743.326698800192" meanValue="4837.453241407781" simulationTime="64405.550524188155" upperBound="4931.57978401537"/>
</measure>
<measure alpha="0.99" analyzedSamples="46080" discardedSamples="450" finalValue="1.0024086921738107" name="Control Center Server_Throughput" nodeType="station" precision="0.03" referenceClass="" referenceStation="Control Center Server" state="1" type="5">
<sample lastIntervalAvgValue="1.0043679007961364" meanValue="1.0043679007961364" simulationTime="1906.6718465235988"/>
<sample lastIntervalAvgValue="0.9883927440845084" lowerBound="0.864222958150031" meanValue="0.9896468970502443" simulationTime="6610.267687169012" upperBound="1.157656611078362"/>
<sample lastIntervalAvgValue="1.0188345668914864" lowerBound="0.864222958150031" meanValue="0.9896468970502443" simulationTime="11191.973247319267" upperBound="1.157656611078362"/>
<sample lastIntervalAvgValue="1.0055571954581397" lowerBound="0.9598132829050038" meanValue="0.9986390434882649" simulationTime="14553.2937323863" upperBound="1.040738333078887"/>
<sample lastIntervalAvgValue="0.9987836884823083" lowerBound="0.9598132829050038" meanValue="0.9986390434882649" simulationTime="19101.826164772407" upperBound="1.040738333078887"/>
<sample lastIntervalAvgValue="1.0248598023247226" lowerBound="0.9598132829050038" meanValue="0.9986390434882649" simulationTime="21969.535478117872" upperBound="1.040738333078887"/>
<sample lastIntervalAvgValue="1.0140191817196913" lowerBound="0.9715696077510598" meanValue="1.0113862749739397" simulationTime="26454.657734175173" upperBound="1.054605919359068"/>
<sample lastIntervalAvgValue="0.987094491735578" lowerBound="0.9715696077510598" meanValue="1.0113862749739397" simulationTime="30065.25431823019" upperBound="1.054605919359068"/>
<sample lastIntervalAvgValue="1.0003712004281105" lowerBound="0.9715696077510598" meanValue="1.0113862749739397" simulationTime="35137.37154614376" upperBound="1.054605919359068"/>
<sample lastIntervalAvgValue="1.0070351785153526" lowerBound="0.9715696077510598" meanValue="1.0113862749739397" simulationTime="39685.37552625514" upperBound="1.054605919359068"/>
<sample lastIntervalAvgValue="0.9947046446390684" lowerBound="0.9715696077510598" meanValue="1.0113862749739397" simulationTime="43801.170121228126" upperBound="1.054605919359068"/>
<sample lastIntervalAvgValue="0.9744847337461615" lowerBound="0.9864763489789967" meanValue="1.0024086921738107" simulationTime="46445.64459143698" upperBound="1.0188641225406943"/>
</measure>
<measure alpha="0.99" analyzedSamples="12800" discardedSamples="85460" finalValue="1.0" name="Control Center Server_Utilization" nodeType="station" precision="0.03" referenceClass="" referenceStation="Control Center Server" state="1" type="4">
<sample lastIntervalAvgValue="0.9999998064625907" meanValue="0.9999998064625907" simulationTime="1906.6718465235988"/>
<sample lastIntervalAvgValue="1.0" meanValue="0.9999999441758871" simulationTime="6610.267687169012"/>
<sample lastIntervalAvgValue="1.0" meanValue="0.999999967028841" simulationTime="11191.973247319267"/>
<sample lastIntervalAvgValue="1.0" meanValue="0.9999999746440678" simulationTime="14553.2937323863"/>
<sample lastIntervalAvgValue="1.0" meanValue="0.9999999806818297" simulationTime="19101.826164772407"/>
<sample lastIntervalAvgValue="1.0" meanValue="0.9999999832034532" simulationTime="21969.535478117872"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="26454.657734175173"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="30065.25431823019"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="35137.37154614376"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="39685.37552625514"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="43801.170121228126"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="46930.72943762472"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="52263.67936589907"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="55558.54534011549"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="60356.8873467079"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="63966.232163225046"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="67299.09129630038"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="72558.6113665767"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="76095.19277787814"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="79483.5409816295"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="84562.2227135427"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="87750.86157481128"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="90771.7669513809"/>
<sample lastIntervalAvgValue="1.0" meanValue="1.0" simulationTime="94789.14873242767"/>
<sample lastIntervalAvgValue="1.0" lowerBound="0.9713515668682959" meanValue="1.0" simulationTime="98077.96687855924" upperBound="1.028648433131704"/>
</measure>
<measure alpha="0.99" analyzedSamples="19547" discardedSamples="0" finalValue="6064.452061913778" logFile="/home/gaetano/JMT/Sink QCS_Response Time per Sink.csv" name="Sink QCS_Response Time per Sink" nodeType="station" precision="0.03" referenceClass="" referenceStation="Sink QCS" state="2" type="12">
<sample lastIntervalAvgValue="1689.7966980834533" meanValue="1689.7966980834533" simulationTime="1691.3013775290683"/>
<sample lastIntervalAvgValue="2875.8758997714667" meanValue="2874.9434475688813" simulationTime="6608.308708565822"/>
<sample lastIntervalAvgValue="4236.760666318486" meanValue="3665.8208171920833" simulationTime="11192.066735230434"/>
<sample lastIntervalAvgValue="5118.837484322176" meanValue="4126.389810285082" simulationTime="14553.696598841703"/>
<sample lastIntervalAvgValue="5563.873186510892" meanValue="4573.90401485275" simulationTime="19103.188565340508"/>
<sample lastIntervalAvgValue="6069.509955952354" meanValue="4825.100987932173" simulationTime="21969.72792927604"/>
<sample lastIntervalAvgValue="6280.929930312124" meanValue="5130.8651222687795" simulationTime="26450.92866181627"/>
<sample lastIntervalAvgValue="6569.338927958982" meanValue="5341.7762307472285" simulationTime="30066.205132905056"/>
<sample lastIntervalAvgValue="6794.712506671047" meanValue="5590.581750862167" simulationTime="35136.70705261484"/>
<sample lastIntervalAvgValue="7085.32294426631" meanValue="5796.512724375542" simulationTime="39685.922591162474"/>
<sample lastIntervalAvgValue="7266.42416819751" meanValue="5957.269034592085" simulationTime="43802.48708162145"/>
<sample lastIntervalAvgValue="7373.8387675583945" meanValue="6064.452061913778" simulationTime="46929.42036724129"/>
</measure>
</results>
</archive>
